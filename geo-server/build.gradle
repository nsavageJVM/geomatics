buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'se.transmode.gradle:gradle-docker:1.2'
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

jar {
	baseName = 'geomatic'
	version = '0.0.1-SNAPSHOT'
}


repositories {
	maven {
		url "http://download.osgeo.org/webdav/geotools/"
	}
	maven {
		url "http://repo.boundlessgeo.com/main/"
	}

	maven {
		url "http://repo.boundlessgeo.com/snapshot/"
	}

	mavenCentral()
}


dependencies {

	compile ( project(":common") ) {
		exclude module: "logback-classic"
		exclude module: 'slf4j-log4j12'
		exclude module: 'slf4j-api'
	}

	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4'
	compile("org.springframework.boot:spring-boot-starter-security")
	compile('org.webjars:bootstrap:3.3.7')
	compile('org.webjars:jquery:2.2.1')
	compile('org.webjars:bootstrap-material-design:4.0.2')

	compile('org.postgresql:postgresql:42.1.1')

	// gis
	compile('org.geotools:gt-referencing:18-SNAPSHOT')
	compile('org.geotools:gt-api:18-SNAPSHOT')
	compile('org.geotools:gt-epsg-hsql:18-SNAPSHOT')




	testCompile('org.springframework.boot:spring-boot-starter-test') 
}


task buildDocker(type: Docker, dependsOn: build) {
	push = false
	applicationName = jar.baseName
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}
